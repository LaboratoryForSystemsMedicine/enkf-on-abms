import Statistics

# output_ranges.mat
const lb_GCSF = [0]
const lb_IFN = [0.2, 0.09, 0.002, 0.002]
const lb_IL6 = [0]
const lb_neutrophils = [0.002, 0.001, 0.001, 0.001]
const lb_virus = [6.417352, 4.36519, 3.237626, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
const time_GCSF = [5]
const time_IFN = [4, 7, 10, 15]
const time_IL6 = [5]
const time_neutrophils = [1, 3, 5, 7]
const time_virus = [1, 3, 5, 7, 10, 12, 14, 17, 21]
const ub_GCSF = [500]
const ub_IFN = [30, 30, 7, 1]
const ub_IL6 = [300]
const ub_neutrophils = [0.017, 0.012, 0.007, 0.007]
const ub_virus =
    [7.735792, 7.536264, 6.456679, 5.665, 4.880262, 3.736495, 2.015361, 0.0, 0.0]

# IL6_Lucas_data.mat
const IL6_Lucas_HCW_individual = [
    -1.4,
    -1.44615385,
    -1.32307692,
    -1.43076923,
    -1.12307692,
    -0.81538462,
    -0.89230769,
    -0.78461538,
    -0.86153846,
    -0.75384615,
    -0.58461538,
    -0.46153846,
    -0.35384615,
    -0.47692308,
    -0.52307692,
    -0.58461538,
    -0.70769231,
    -0.70769231,
    -0.4,
    -0.35384615,
    -0.29230769,
    -0.26153846,
    -0.10769231,
    -0.58461538,
    -0.52307692,
    -0.35384615,
    -0.38461538,
    -0.18461538,
    -0.03076923,
    -0.12307692,
    0.13846154,
    0.13846154,
    0.15384615,
    0.21538462,
    0.26153846,
    0.4,
    0.46153846,
    0.09230769,
    0.07692308,
    -0.10769231,
    0.01538462,
    0.12307692,
    0.2,
    0.24615385,
    0.70769231,
    0.84615385,
    1.26153846,
]

const IL6_Lucas_Severe_individual = [
    0.95384615,
    1.52307692,
    1.38461538,
    1.61538462,
    1.75384615,
    1.64615385,
    1.93846154,
    1.93846154,
    1.76923077,
    1.87692308,
    2.06153846,
    2.18461538,
    2.38461538,
    2.21538462,
    2.35384615,
    2.43076923,
    2.38461538,
    2.46153846,
    2.61538462,
    2.55384615,
    2.8,
    2.70769231,
    2.76923077,
    2.61538462,
    2.86153846,
    2.83076923,
    2.89230769,
    3.03076923,
    2.95384615,
    3.09230769,
    3.44615385,
    3.07692308,
    3.2,
    3.07692308,
    3.03076923,
    3.29230769,
    3.43076923,
    3.49230769,
    3.44615385,
    3.41538462,
    3.98461538,
]

const IL6_Lucas_moderate_individual = [
    -0.83076923,
    -0.44615385,
    -0.15384615,
    -0.03076923,
    -0.16923077,
    -0.09230769,
    -0.09230769,
    0.2,
    0.16923077,
    0.26153846,
    0.38461538,
    0.29230769,
    0.2,
    0.43076923,
    0.58461538,
    0.56923077,
    0.49230769,
    0.35384615,
    0.16923077,
    0.35384615,
    0.36923077,
    0.56923077,
    0.55384615,
    0.70769231,
    0.83076923,
    0.83076923,
    0.98461538,
    0.83076923,
    0.87692308,
    1.01538462,
    1.07692308,
    1.24615385,
    1.10769231,
    1.2,
    1.26153846,
    1.38461538,
    1.10769231,
    1.09230769,
    1.26153846,
    1.23076923,
    1.21538462,
    1.0,
    0.81538462,
    0.93846154,
    0.75384615,
    0.89230769,
    0.87692308,
    1.13846154,
    1.43076923,
    1.55384615,
    1.61538462,
    1.66153846,
    1.72307692,
    1.72307692,
    1.61538462,
    1.53846154,
    1.47692308,
    1.55384615,
    1.50769231,
    1.70769231,
    1.84615385,
    1.64615385,
    1.69230769,
    1.73846154,
    1.83076923,
    1.90769231,
    1.96923077,
    2.04615385,
    2.13846154,
    2.06153846,
    1.98461538,
    2.04615385,
    2.15384615,
    1.87692308,
    2.10769231,
    2.26153846,
    2.33846154,
    2.46153846,
    2.27692308,
    2.41538462,
    2.33846154,
    2.38461538,
    2.44615385,
    2.53846154,
    2.6,
    2.69230769,
    2.55384615,
    2.61538462,
    2.58461538,
    2.75384615,
    2.72307692,
    2.52307692,
    2.50769231,
    2.38461538,
    2.35384615,
    2.8,
    2.92307692,
    2.72307692,
    2.64615385,
    2.83076923,
    3.01538462,
    3.01538462,
    3.18461538,
    2.98461538,
    3.4,
    3.43076923,
    3.15384615,
    3.53846154,
]



# Human_viral_load_data.mat
const time_g1 = [
    0.0,
    1.398,
    1.957,
    2.967,
    4.536,
    4.967,
    5.905,
    6.896,
    7.616,
    8.995,
    9.9,
    10.81,
    12.261,
    13.626,
    14.45,
    15.142,
    16.18,
    17.303,
    18.545,
]

const time_g2 = [
    0.449,
    0.875,
    1.657,
    2.968,
    4.044,
    5.116,
    6.074,
    7.186,
    8.321,
    9.16,
    9.904,
    10.944,
    11.778,
    13.234,
    14.05,
    15.036,
    15.987,
    17.317,
]

const time_g5 = [
    0.208,
    2.767,
    3.439,
    4.476,
    5.316,
    6.568,
    7.642,
    8.783,
    9.485,
    10.312,
    11.38,
    12.905,
    13.401,
    14.537,
    16.038,
]

const time_g6 =
    [1.271, 1.923, 2.73, 4.044, 4.63, 5.538, 7.381, 8.897, 10.291, 12.582, 13.812]

const time_g7 = [0.342, 1.709, 3.077, 3.932, 7.009, 7.863, 8.718, 9.915, 11.111, 12.991]

const time_s18 = [
    0.751,
    1.268,
    2.426,
    4.101,
    4.667,
    6.884,
    7.562,
    8.202,
    9.544,
    10.296,
    11.65,
    13.313,
    14.754,
    15.135,
    17.328,
    19.36,
    20.296,
]

const time_s5 = [
    0.83,
    2.046,
    6.568,
    8.407,
    9.447,
    11.958,
    13.061,
    13.576,
    14.381,
    15.644,
    16.433,
    17.85,
    18.429,
    19.824,
    20.365,
    21.596,
]

const time_s6 = [
    1.152,
    1.755,
    3.595,
    5.544,
    6.491,
    8.59,
    9.193,
    10.463,
    11.41,
    12.26,
    12.928,
    14.693,
    15.221,
    16.297,
]

# const viral_load_g1 = [
#     5.844,
#     8.278,
#     8.59,
#     7.398,
#     6.517,
#     4.698,
#     5.322,
#     3.814,
#     3.808,
#     2.771,
#     2.843,
#     2.994,
#     3.14,
#     4.866,
#     3.596,
#     3.117,
#     2.399,
#     3.1,
#     2.775,
# ]

const viral_load_g2 = [
    4.058,
    8.515,
    6.67,
    7.463,
    6.419,
    5.455,
    6.483,
    4.801,
    2.721,
    2.874,
    4.7,
    4.293,
    4.526,
    2.762,
    3.313,
    3.863,
    2.023,
    2.49,
]

const viral_load_g5 = [
    5.335,
    3.482,
    7.22,
    6.814,
    5.851,
    6.479,
    7.028,
    4.788,
    4.783,
    3.502,
    3.892,
    2.526,
    1.725,
    3.867,
    1.863,
]

const viral_load_g6 =
    [7.946, 7.541, 6.973, 4.946, 5.351, 5.514, 2.189, 2.919, 2.757, 3.973, 5.189]

const viral_load_g7 = [6.926, 6.517, 5.391, 5.783, 7.829, 4.159, 5.426, 4.222, 1.743, 3.72]

const viral_load_s18 = [
    5.357,
    6.357,
    6.071,
    6.786,
    5.071,
    4.929,
    3.857,
    4.571,
    4.357,
    2.714,
    4.571,
    4.214,
    3.571,
    2.786,
    3.5,
    3.286,
    2.714,
]

const viral_load_s5 = [
    6.169,
    7.531,
    4.061,
    1.725,
    3.087,
    3.481,
    3.879,
    2.271,
    1.625,
    3.389,
    4.11,
    4.185,
    1.612,
    4.501,
    1.606,
    1.602,
]

const viral_load_s6 = [
    7.303,
    6.656,
    4.953,
    4.054,
    3.403,
    3.627,
    1.694,
    3.452,
    1.515,
    1.428,
    2.548,
    4.141,
    1.646,
    3.244,
]

######################################################################

# adapted from commands_violinplots.m
const viral_load_s2 =
    log10.([
        16465.659618780002,
        492.5454000379935,
        2982.5809699610345,
        112.13330651783012,
        71.50619002827221,
        1120.224445309915,
        79.32467181991032,
        78.68939200468418,
    ])
# const time_s2mod = [0, 7, 8, 10, 11, 12, 13, 14] .+ 7

const viral_load_s3 =
    log10.([
        587200.73,
        24674751.46,
        35923.391,
        29932.350,
        4638.4470,
        1517.641870,
        438.6847,
        1266.41015,
        4152.7278,
        878.09191,
        730.9749,
        78.0068,
        2255.25641,
    ])
# const time_s3mod = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] .+ 4

const viral_load_s4 =
    log10.([5555.516, 5487.6627, 11573.659, 13699.799, 97.98587, 82.059313, 91.893])
# const time_s4mod = [0, 4, 7, 9, 11, 12, 13] .+ 7

const viral_load_s10 =
    log10.([
        94712.88475,
        3462.0839,
        22346.81,
        8252.0174,
        1279.4720,
        111.3866,
        109.7006,
        100.832,
    ])
# const time_s10mod = [0, 1, 4, 5, 6, 7, 8, 10] .+ 6

const viral_load_s11 =
    log10.([
        1275849.28049505,
        54045.38571,
        380.9929,
        1321.5436,
        1314.40864,
        6510.68325,
        83.3386,
        78.123226,
        73.13515,
    ])
const time_s11mod = [0, 1, 3, 4, 5, 6, 8, 9, 10] .+ 5

const viral_load_s12 =
    log10.([
        28182.6154,
        4453.23734,
        19167.6378,
        3646.1527,
        2076.506848,
        3804.1328277,
        819.0564,
        861.42516,
        74.022616,
        1377.23323,
        64.255471490,
        63,
        63,
        63,
    ])
const time_s12mod = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13] .+ 6

const viral_load_s14 =
    log10.([
        106246.783,
        6543189.12,
        88586.6790,
        6543189.129712,
        2636650.898,
        1062467.8308,
        143844.9888,
        5796.39395,
        6158.4821,
        83.378222,
        9412.0496,
        10624.67830,
        88.586,
        70,
        70,
        70,
    ])
const time_s14mod = [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17] .+ 1

const viral_load_s17 =
    log10.([
        2614.0521,
        10361.832,
        4069.2568,
        12116.3392,
        1780.908,
        14167.92681,
        13935.83,
        27337.5367483,
        0.866948,
        100,
    ])
const time_s17mod = [0, 1, 2, 3, 4, 5, 7, 9, 10, 11] .+ 7

const viral_load_g1 =
    log10.([
        891255.8032,
        401989831.93,
        764849404.45,
        54136256.068,
        13167579.539,
        88713.00554,
        254851.410,
        19125.59747,
        13400.3404,
        1430.43839,
        1803.74699,
        2560.785,
        4593.3629,
        130780.38186,
        15709.9109,
        2530.7693,
        778.7519,
        3582.366,
        1392.53,
    ])

const viral_load_g3 =
    log10.([
        3145190.663,
        897778.331,
        2544.3051,
        57281.910,
        96683.835,
        54750.721,
        65319.21804,
        16517.611,
        24847.6186,
        7910.223,
        1001.9047,
        5992.378,
        7169.51871,
        8569.738,
        1929.575,
        4600.390,
        130.368,
        116.93048,
        1482.288,
    ])
const time_g3mod =
    ([0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] .+ 5)

const viral_load_g4 =
    log10.([
        13123028.4369,
        515978.147,
        2434576.30,
        22853.731093,
        108014.71,
        15871.4403,
        92.4419,
        72.55224,
        891.16687,
        50,
    ])
const time_g4mod = [0, 2, 3, 4, 5, 6, 7, 9, 10] .+ 4

const viral_load_g8 =
    log10.([
        4243301.3385,
        23756.19217,
        46258.7851,
        10262.476,
        979.748,
        421.986953,
        572.8577,
        106.02984,
        119.961981,
        113.3741,
    ])
const time_g8mod = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] .+ 6

const time_s3mod = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12] .+ 4
const time_s2mod = [0, 7, 8, 10, 11, 12, 13, 14] .+ 7
const time_s4mod = [0, 4, 7, 9, 11, 12, 13] .+ 7
const time_s5mod = ([1, 2, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22] .+ 2)  # adding rounded lags
const time_s6mod = [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16] .+ 3
const time_s10mod = [0, 1, 4, 5, 6, 7, 8, 10] .+ 6
const time_s18mod = ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 19, 20] .+ 1)
const time_g1mod = ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] .+ 1)
const time_g2mod = ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] .+ 1)
const time_g5mod = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16] .+ 1
const time_g6mod = [1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14] .+ 3
const time_g7mod = [1, 2, 3, 4, 7, 8, 9, 10, 11, 12] .+ 2

viral_loads = [
    viral_load_s3,
    viral_load_s4,
    viral_load_s5,
    viral_load_s6,
    viral_load_s10,
    viral_load_s11,
    viral_load_s12,
    viral_load_s14,
    viral_load_s17,
    viral_load_s18,
    viral_load_g1,
    viral_load_g2,
    viral_load_g3,
    viral_load_g5,
    viral_load_g6,
    viral_load_g7,
    viral_load_g8,
]

data_times = [
    time_s3mod,
    time_s4mod,
    time_s5mod,
    time_s6mod,
    time_s10mod,
    time_s11mod,
    time_s12mod,
    time_s14mod,
    time_s17mod,
    time_s18mod,
    time_g1mod,
    time_g2mod,
    time_g3mod,
    time_g5mod,
    time_g6mod,
    time_g7mod,
    time_g8mod,
]

######################################################################

min_time = minimum(minimum.(data_times))
max_time = maximum(maximum.(data_times))
mean_vl = Vector{Float64}()
std_vl = Vector{Float64}()
time_vl = Vector{Float64}()
for t = min_time:max_time
    data = []
    for (viral_load, time) in zip(viral_loads, data_times)
        if any(time .== t)
            vl = viral_load[time.==t][1]
            push!(data, vl)
        end
    end
    if length(data) > 0
        push!(time_vl, t)
        push!(mean_vl, Statistics.mean(data))
        push!(std_vl, Statistics.std(data))
    end
end

######################################################################

function covid_minimizing_fun_severe(solution)

    # from commands_violinplots.m
    upper_st = view(mean_vl + 3 * std_vl, 1:15)
    lower_st = max.(view(mean_vl - 3 * std_vl, 1:15), 0)

    # from data import lb_GCSF, lb_IFN, time_GCSF, time_IFN, ub_GCSF, ub_IFN

    ub_IFN_scaled = ub_IFN * 0.1
    lb_IFN_scaled = deepcopy(lb_IFN)
    lb_IFN_scaled[1] = 0.1
    lb_IFN_scaled = lb_IFN_scaled * 0.1

    ub_IL6 = [400, 400, 400] # [200 200 200] # max(10** IL6_Lucas_Severe_individual) # 40
    lb_IL6 = [0, 0, 0]
    time_IL6 = [4.5, 7, 10]
    lower_st[1] = 2  # ACK: what's this about?

    vec_virus = sum(
        max.(
            (solution(view(time_vl, 1:15))[1, :] - (lower_st + upper_st) / 2) .^ 2 .-
            (upper_st - (lower_st + upper_st) / 2) .^ 2,
            0,
        ),
    )  # previous only used 1 - 7
    vec_IFN = sum(
        max.(
            (solution(time_IFN)[17, :] - (lb_IFN_scaled + ub_IFN_scaled) / 2) .^ 2 -
            (ub_IFN_scaled - (lb_IFN_scaled + ub_IFN_scaled) / 2) .^ 2,
            0,
        ),
    )
    # vec_IL6 = sum(max((deval(sol, time_IL6, 11) - (lb_IL6 + ub_IL6) / 2)** 2
    # - (ub_IL6 - (lb_IL6 + ub_IL6) / 2)** 2, 0))
    vec_IL6 = sum(
        max.(
            (solution(time_IL6)[10, :] - (lb_IL6 + ub_IL6) / 2) .^ 2 -
            (ub_IL6 - (lb_IL6 + ub_IL6) / 2) .^ 2,
            0,
        ),
    )
    vec_GCSF = sum(
        max.(
            (solution(time_GCSF)[13, :] - (lb_GCSF + ub_GCSF) / 2) .^ 2 -
            (ub_GCSF - (lb_GCSF + ub_GCSF) / 2) .^ 2,
            0,
        ),
    )
    # vec_neutrophils = 0  # sum(max((deval(sol, time_neutrophils, 9)
    # - (lb_neutrophils + ub_neutrophils) / 2) ** 2
    # - (ub_neutrophils - (lb_neutrophils + ub_neutrophils) / 2) ** 2, 0)) *10

    return vec_virus + vec_IFN + vec_IL6 + vec_GCSF # + vec_neutrophils
end
